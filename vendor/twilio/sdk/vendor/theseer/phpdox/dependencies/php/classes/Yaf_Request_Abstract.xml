<?xml version="1.0" encoding="UTF-8" ?>
<class xmlns="http://xml.phpdox.net/src" full="Yaf_Request_Abstract" namespace="" name="Yaf_Request_Abstract">
  <constant name="SCHEME_HTTP" value="http">
    <docblock>
      <var type="string"/>
    </docblock>
  </constant>
  <constant name="SCHEME_HTTPS" value="https">
    <docblock>
      <var type="string"/>
    </docblock>
  </constant>
  <member name="module" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="controller" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="action" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="method" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="params" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="language" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="_exception" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="_base_uri" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="uri" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="dispatched" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <member name="routed" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact=""/>
    </docblock>
  </member>
  <method name="getActionName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The getActionName purpose"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="getBaseUri" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The getBaseUri purpose"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="getControllerName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The getControllerName purpose"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="getEnv" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve ENV varialbe"/>
      <return type="void"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
    <parameter name="default" optional="true" byreference="false" type="string"/>
  </method>
  <method name="getException" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The getException purpose"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="getLanguage" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve client's prefered language"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="getMethod" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve the request method"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getModuleName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The getModuleName purpose"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="getParam" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve calling parameter"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
    <parameter name="default" optional="true" byreference="false" type="string"/>
  </method>
  <method name="getParams" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve all calling parameters"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getRequestUri" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The getRequestUri purpose"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="getServer" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve SERVER variable"/>
      <return type="void"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
    <parameter name="default" optional="true" byreference="false" type="string"/>
  </method>
  <method name="isCli" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determine if request is CLI request"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isDispatched" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determin if the request is dispatched"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isGet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determine if request is GET request"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isHead" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determine if request is HEAD request"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isOptions" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determine if request is OPTIONS request"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isPost" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determine if request is POST request"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isPut" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determine if request is PUT request"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isRouted" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determin if request has been routed"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="isXmlHttpRequest" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Determine if request is AJAX request"/>
      <return type="bool"/>
    </docblock>
  </method>
  <method name="setActionName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The setActionName purpose"/>
      <return type="void"/>
    </docblock>
    <parameter name="action" optional="false" byreference="false" type="string"/>
  </method>
  <method name="setBaseUri" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set base URI">Set base URI, base URI is used when doing routing, in routing phase request URI is used to route a request, while base URI is used to skip the leadding part(base URI) of request URI. That is, if comes a request with request URI a/b/c, then if you set base URI to "a/b", only "/c" will be used in routing phase. generally, you don't need to set this, Yaf will determine it automatically.</description>
      <return type="bool"/>
    </docblock>
    <parameter name="uir" optional="false" byreference="false" type="string"/>
  </method>
  <method name="setControllerName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The setControllerName purpose"/>
      <return type="void"/>
    </docblock>
    <parameter name="controller" optional="false" byreference="false" type="string"/>
  </method>
  <method name="setDispatched" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The setDispatched purpose"/>
      <return type="void"/>
    </docblock>
  </method>
  <method name="setModuleName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The setModuleName purpose"/>
      <return type="void"/>
    </docblock>
    <parameter name="module" optional="false" byreference="false" type="string"/>
  </method>
  <method name="setParam" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Set a calling parameter to a request"/>
      <return type="bool"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
    <parameter name="value" optional="true" byreference="false" type="string"/>
  </method>
  <method name="setRequestUri" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The setRequestUri purpose"/>
      <return type="void"/>
    </docblock>
    <parameter name="uir" optional="false" byreference="false" type="string"/>
  </method>
  <method name="setRouted" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="The setRouted purpose"/>
      <return type="void"/>
    </docblock>
    <parameter name="flag" optional="true" byreference="false" type="string"/>
  </method>
</class>